{"layout":{"activeNavigationTab":"project","navigationPanelIsOpen":false,"referencePanelIsOpen":false,"activeSoundTicTab":"volume","tileSelectorIsOpen":false,"tileEditor":{"showGrid":false},"tilemapEditor":{"tilemapSelectorIsOpen":true,"tileSelectorIsOpen":true,"cursorX":-9,"cursorY":10,"showGrid":true},"soundEditor":{"pianoOctave":4,"lastVolumeTic":-1,"lastPitchTic":-1,"lastArpTic":-1},"referenceTabTitle":"Articles","play":{"stickConsoleToBottom":true},"referenceRoutes":{"about":{"current":["REFERENCE_ABOUT"],"cached":{"REFERENCE_ABOUT":["REFERENCE_ABOUT"]}},"project":{"current":["MOTIVATION"],"cached":{"MOTIVATION":["MOTIVATION"]}},"play":{"current":["CONSOLE"],"cached":{"CONSOLE":["CONSOLE"]}},"code":{"current":["API","API_INPUT_SNIPPETS"],"cached":{"API":["API","API_INPUT_SNIPPETS"]}},"tile":{"current":["ARTICLES"],"cached":{"ARTICLES":["ARTICLES"]}},"tilemap":{"current":["ARTICLES"],"cached":{"ARTICLES":["ARTICLES"]}},"sound":{"current":["HOTKEYS"],"cached":{"HOTKEYS":["HOTKEYS"]}},"publish":{"current":["MOTIVATION"],"cached":{"MOTIVATION":["MOTIVATION"]}}},"colorPickerIsOpen":false,"activePage":"EDITOR_PAGE","modalCount":0},"sound":{"sounds":[{"volumeTics":[9,9,0,0,14,14,0,0,0,0,0,0,0,0,0,0,14,14,0,0,10,10,0,0,0,0,0,0,0,0,0,0],"pitchTics":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"arpTics":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2],"_id":"5f750214e59d907ca9cf27a2","pitchScale":100,"wave":2,"useVolumeLoop":true,"volumeLoopStart":0,"volumeLoopEnd":31,"usePitchLoop":false,"pitchLoopStart":0,"pitchLoopEnd":31,"useArpLoop":true,"arpLoopStart":0,"arpLoopEnd":31,"name":"walk","releaseLength":1,"releaseMode":"linear","needToAddToAudioEngine":false},{"volumeTics":[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15],"pitchTics":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"arpTics":[0,0,0,0,1,1,1,1,3,3,3,3,5,5,5,5,7,7,7,7,9,9,9,9,11,11,11,11,8,8,8,8],"_id":"5f750214e59d907ca9cf27a1","pitchScale":100,"wave":2,"useVolumeLoop":false,"volumeLoopStart":0,"volumeLoopEnd":31,"usePitchLoop":false,"pitchLoopStart":0,"pitchLoopEnd":31,"useArpLoop":false,"arpLoopStart":0,"arpLoopEnd":31,"name":"pickup","releaseLength":10,"releaseMode":"linear"}],"activeSound":0,"audioEvents":[],"piano":{"speed":0,"volume":0.75}},"palette":{"colors":["000000","0b0711","eaf2de","766e76","561f6e","7d4f31","e98c49","fbc0a0","f681b2","d83232","e3e962","65cf57","2ba957","187575","1e2cB0","2379e5","95cae5"],"selectedIndex":9,"altIndex":0},"pixelTools":{"selectedTool":"PENCIL_TOOL","selectedTileTool":"TILE_ERASE_TOOL","pixelToolSettings":{"pencilSize":1,"eraserSize":6}},"tileset":{"tilesets":[{"name":"untitled","width":8,"height":8,"selectedTile":15,"selectionWidth":1,"selectionHeight":1,"mapSelectedTile":16,"mapSelectionWidth":1,"mapSelectionHeight":1,"activeLayer":0,"layers":[{"isVisible":true,"data":"CwGgDCoIwjHSA7OStbPmgHFlBmNOEAmATn0JQQ1RiJJFIggCZaU3ojO0IHy+lVqlLd2wrh3EgeUMQgmNmMkADYRK9TTbqC5HjpC5h6mKD1p1WAZbTJQ5GKaQuITuyACsjWzGTHfFwcPaxR1chtkR2VwpTCfKBiEpIjlZFiIdJ9MtSMAw2RCqS0XbVyirBp3NmQ6Yhc6v1dbGsoCWsoit1zWuvbKJqx1brr1XrR+xpdhgZ6XXDMUKbGGidW6-xnFuTRQbuhu733YOqw9+tAFryXFo4ujbBnyUBpn5recFHtsoJ-v0OEDEBsHObBIYhIdzBvBU4KkJDKBBYd1w3kSS2uRBgaLYwKxmIIhxh0KghMICnJsDJdApJIhMJpMlB11wuDY3iqKmxaDY3JgvNxaDRGOFvPxvMxIpBFCg0DJJDlMtALHOfIeJQIVw5GIloqFPJOOv1-ONXPFpt1BqggqaJG6tXxyDtVJl9pk1Ou-U1qA62u60L1O399UD5oIgZtLmdTSDHmjDUd9XRTRYHu85CuvuaMa5sEDCakEqg+YdGI6Re8bAFKDRbiItcNEAbqalMFwRTYWuaVcIlbNZateZUYsLvcHtXlDUnE4oyBVUq9CRcbEcqz9w7HPdjW6HW7EFY31oHUw6dEjp48jXPswvLeEq6dS9wwRTPhmO+Lh-3m-7wgPW8jbxJkA+pahA-o7zQVcrnIfwVGgqDcj-H8R2Qug+1Qw9dy5QVQBxKhMVw65526chvW1b0yGaSZpxdQRCmZTNx2Yk1vXfWBnA2SheVMZQ6E4y8rQyLkBJzE0oC0MlO0HK4JVk7Afn40DCF4qQJOUpTYyUyYOKQLZc2Dc0bFMUx6109EcnUxA7joboRjswg3GUEhnBGUyZVclTGyTTylOsjFk1yfFfKC2AnIC0wbPMqKrJsWyGTChL0SwGypgIPBnCwPi6nMYgGCi3RrkQLEJXSvK1iJJpQEK7w7mqmFnT3Gtf0QpFEJYErdnqFhb3YD1Cu+Zws1VOYgNyRqVACUwECLYIcn0ZRgHkptxtWFYs3601hDGlZ0R7LY3BeFAIlgOLVzKk1kQNN0siOkbhV27bNCTCB9NlQgr0xBAdkZfT9FCsjrhfAIoFXGA2pJNEGBNVciKKIbrnstZeSeghONetTPoVD6k1mxH4NQFYxscEHYe62FdwlSN1BKbx1ChRLoRRlQ+3ptTlVgWQOaPXk8KkQHWZZgmoACXqfq5bxcuxlhgwxgb6jZwQ9vJ5WdvqYR3uraBvqLcS+cwAWFdO+Jwf7cTapV7XuL6lBcHW6jGfqCbBbJabCCaxlXgSSJrdJK1cs-Ekh0ZEWKv1O2PDKLdgWZkD3HONEdaTI6TFyBaOAYXlhUzin0NgK5znDZ6i7ilQDhhPn3DuWo5tsdMZG4PULrRK4Zkrmw0aQlXpSPTAq1wqZDDbRariy23uhBnwaCWzniEFPAJU5MHSK7mejwX-AJT+wJAuccg6oWMEbTBnCPBX+KqJmQ-aG2WRb5v2g78fh-oCPzew7a+gDPJ+fZ7RW4X5A0NHzSQIDDRFzoAQV+c936LEMkuPG4ke65jJpOI8dAmhqxYPvQgUDZ4bz4JaNCyDPyMh7IXWeGCXBqwttUCBLpoEEJge4eB7084hyFkrXW1CjY7DVjgzu9C-aMPnlvI0HDSHIPZARdBhoZaejTgo9QlcXQkDfqwXqCB9KIODlI-G0CqHciHsgNW6JBYqL9momBhDbCsO+sKNhnDn6GOIuNNmkDcbWOYV3PsdVKGGk-ILFg0iPFWKYRvFhg5Vx7wNHcKxhi2ZD3obTXBz8mGg19ovcRoVDBcJxu48aK13BqmEfg0RClgw0HieAnBHiRGwIeJUmU3C8C1IYWUms1YqGtMlJYjp2ojxQyZH-F0P1uEmOehbQwBSTK9IuryHBQ9uSmC3Hg08eDBmqJGX7fCvI1mpOTOM1xyigGmCLp3ApfSjx807pspZ1xdmjN+Fk0J-jSmPlke85+eyPDc3WBYT5HjJZBSLgUOZnibk9AtvhDxTRdq-GuWXWeHMDFPKyFk6+VDpH3KCSE9piKsHQreQwDsz8UXIqRZ8kly4HiAqFoIixGy360KLNSucZLKUGGcWimlmK5HHONoLPhLRwXQPnILNmKzI6ctQLILlMLSiTTefyUFQUVq3NFbPcVz1JX+NJa+UqsqPA7jwVkz+SZFUrmVcQKZo1UnxJWoYeRdM9UGiOjudlhq-merWN67u1KTTuuFi0tpVzmZBJWlK1ofrA0UrlUax53wXnBpxoEo2HVwVhOkVKuFuZviIvjRzBV6KPCOG4Yk8oSiG6Zv6UFLJ8L81cugUW11DbaVHMFqiWwFa2YSs1TzSUsQBnQzbIOkMDQnV1o3FGlQYE5hlpxtq6ZY7LlMu2S6HNATpHXw5ldAtiU6XvQesMhxa7NkeM3WMlk-iypzgVbeg9Ib+3VlPVOwx2atVPIhsaqxPzTYeq3TjHpr74l4r9pes81wZ1+3-Xm90n6YM-0vJBwxbSzkCsZZ489G7rWbLnbCqMw5UWIcfCOOleLIpVrubkTDoHwUQZGXy0jMhi0qxQwExZQUu2vPQduw0MyHntrjMOVjn83DcK7U60Na6N7eCYz-UTXJxM40kz0CjuRX3NqrVdOTN6sJ3r0wBw5QHpMcsJVBhDDAH0tgHYhh9xnulUcdT0Epa7bVjAttBqz+n4O2e80Z9jOxpG3Oc1K49fNDBCPmTIULiUBmsuRnB+cVLEsvMC6bY9GTMuxai1h9TEyh4rXkxDRTZGn0gcodirj17ZHMb3Was2LSgGlOBS12geDWsdfa98tmgiasNarKVwDjnSmItG7INdiotN+2vgJ51xd+vCcG66tqnh8KyaE7BrJ9XUseDW7Wvl1n73KX2+vPjsjv0pmOwBudY9LIJa28a67cHbtJD80twiBJPFDMeSR8mr3mrvdaOaxtqSjrVK+WKl0wO4NSru59gj5ZflwdRcx1H5NiMBpR3B-C8OFV-aQaq9HbVicysR4OVVuO3vJsNQB8hK2yeEZCTT3bBrPvw83T6mH8bbSM+Y6xns3P2fU+ldt3M1KQdYQl3B81bKhZHg5662NPq2em152Lw16uPtq9WDwH1VOTY9iTYJHnTPuX88-cbnMzOjAi9zVk0npuLe1bmJg2eiuXdtsd+b8mrG20G-u3MGdQ9BcTqD+75QO6RNxrD-DtenYR5atdqMt76UD5J4Cng3aFgRhZ65Olc4wBAu3KrCNRD9tikp8zyKjonEC8cGU1ixvOGeYFQ0tTZSeA6qQZIGukithgIYnlhlKg1YfkGJsKALRykAhW3cF6Kp+Gq-oMnlPnwXKuiUkkLzWdxBF-EsffnCggMYl65lGr6GW5zDaCXzsKVioHMBAsPVK1PA4nAOh-y96Xf8C-bhCv4oAmTuF8VAZkP2EcXvB+RkPAQvLpF0GFfIVaf6NmVcXKDWC6cSCBRocwMkYAMffFXkRA9yQGdAgJcGXArWT-dBYyHweqKiO4dyB-cBVUBdLFX9LZHmZQeuOgt8QHbYEdYgQva+YJY-XhZycBVRNua+O7IAA","_id":"5f750214e59d907ca9cf27a4","format":"rc"}],"_id":"5f750214e59d907ca9cf27a3"}],"activeIndex":0,"editorSelection":{"width":0,"height":0,"offsetX":0,"offsetY":0,"data":[],"isActive":false}},"tilemap":{"activeIndex":1,"tilemaps":[{"name":"untitled","width":12,"height":8,"activeLayer":0,"layers":[{"isVisible":true,"data":"IwGgzGLADOAsVwFZF1AJhEg7CTSAOcLXUJATjxNUlDRADZqyjIcbVQzStKn2MRUGFh1aIeoKrpKw2AgESEdJmM6Iwq8DzCyJTNj0KIKJnnHGSlqFCpNDeWZhMuzYSUVmBA","_id":"5f750214e59d907ca9cf27a6","format":"rc"}],"_id":"5f750214e59d907ca9cf27a5"},{"name":"space","width":12,"height":8,"activeLayer":0,"layers":[{"isVisible":true,"data":"CwGgTArCCM4MwypG5QObMozipgbCEnvDAAy4pg4AclmodG4OA7PeITs2IVyWATRsA4EA","format":"rc"}]}]},"project":{"tileSize":16,"name":"WelcomeDemo","screen":{"_id":"5f7854e5e59d907ca9cf2ab4","width":192,"height":128,"scaleMode":1,"scale":4,"minScale":1,"maxScale":4,"horizontalScaleCushion":10,"verticalScaleCushion":10,"rescaleOnWindowResize":true},"misc":{"hideCursor":false,"clickToBegin":false,"startTransitionFrames":60,"useNegativeMotivation":false,"_id":"5f7854e5e59d907ca9cf2ab5"},"editorVersion":"2.0.0"},"code":{"scripts":[{"_id":"5f750214e59d907ca9cf27a0","text":"\n// Globals\nlet inp = null; // input\nlet scr = null; // screen\nlet aud = null; // audio\n\nconst player = {\n\tx: 90,\n\ty: 30,\n\tspeed: 0.5,\n\tisWalking: false,\n\tflip: 0,\n\tframesSinceWalkStart: 0\n}\nconst player2 = {\n\tx: 90,\n\ty: 30,\n\tspeed: 0.5,\n\tisWalking: false,\n\tflip: 0,\n\tframesSinceWalkStart: 0\n}\n\nconst mushrooms = [\n\t{  \n\t\tx: 36,\n\t\ty: 30,\n\t\twasGrabbed: false\n\t},\n\t{  \n\t\tx: 130,\n\t\ty: 70,\n\t\twasGrabbed: false\n\t},\n\t\t{  \n\t\tx: 110,\n\t\ty: 20,\n\t\twasGrabbed: false,\n\t\tevil: true\n\t}\n];\n\nlet numberOfGrabbedMushrooms = 0;\n\nlet randomColor = 1;\n\n// initialization\nengine.onInit = () => {\n\tinp = engine.input;\n\tscr = engine.screen;\n\taud = engine.audio;\n\t\n\tupdateColors();\n};\n\n\n// update loop\nengine.onUpdate = () => {\n  scr.clear( 1 );\n\n\tscr.drawMap(\n\t  0,      // originX on map\n\t  0,      // originY on map\n\t  -1,     // width\n\t  -1,     // height\n\t  0,      // screenX\n\t  0,      // screenY\n\t  0       // tilemap index\n\t);\n\t\n\tdrawMushrooms();\n\t\n\tupdatePlayer();\n\t\n\tlet textMainColor = 2;\n\tif ( numberOfGrabbedMushrooms > 0 ) {\n\t\ttextMainColor = randomColor;\n\t}\n\t\n\tlet textPositionOffset = 0;\n\tif ( numberOfGrabbedMushrooms > 1 ) {\n\t\ttextPositionOffset = Math.sin( engine.realTimeSinceGameStart * 10 ) * 8;\n\t}\n\t\n\tscr.drawText(\n\t\t'Welcome to Bitmelo!',\n\t\t50,\n\t\t90 + Math.floor( textPositionOffset ),\n\t\ttextMainColor,\n\t\t1,\n\t\t0\n\t);\n\t\n\t\t\n\t\tscr.drawText(\n\t  'test' + numberOfGrabbedMushrooms,\n\t\t30,\n\t\t30 + Math.floor( textPositionOffset ),\n\t\t2,\n\t\t1,\n\t\t0\n\t);\n\n\t\n};\n\nfunction drawMushrooms() {\n\tmushrooms.forEach( mushroom => {\n\t\tif ( !mushroom.wasGrabbed ) {\n\t\t\tscr.drawTile(\n\t\t\t\tmushroom.evil ? 62: 61,\n\t\t\t\tmushroom.x - 8, // center on the position\n\t\t\t\tmushroom.y - 8, // center on the position\n\t\t\t\t0\n\t\t\t);\n\t\t}\n\t} );\n}\n\nfunction updatePlayer() {\n\tlet newX = player.x;\n\tlet newY = player.y;\n\t\n\tlet isWalking = false;\n\tif ( inp.left.pressed ) {\n\t\tnewX -= player.speed;\n\t\tisWalking = true;\n\t\tplayer.flip = 1;\n\t}\n\telse if ( inp.right.pressed ) {\n\t\tnewX += player.speed;\n\t\tisWalking = true;\n\t\tplayer.flip = 0;\n\t}\n\t\n\tif ( inp.down.pressed ) {\n\t\tnewY -= player.speed;\n\t\tisWalking = true;\n\t}\n\telse if ( inp.up.pressed ) {\n\t\tnewY += player.speed;\n\t\tisWalking = true;\n\t}\n\t\n\tif ( isWalking ) {\n\t\tplayer.framesSinceWalkStart += 1;\n\t}\n\t\n\t// play or stop audio\n\tif ( isWalking && !player.isWalking ) {\n\t\t// started walking\n\t\tplayer.framesSinceWalkStart = 0;\n\t\t\n\t\tlet note = bitmelo.Notes.C4;\n\t\tif ( numberOfGrabbedMushrooms > 1 ) {\n\t\t\tnote = bitmelo.Notes.C2;\n\t\t}\n\t\telse if ( numberOfGrabbedMushrooms > 0 ) {\n\t\t\tnote = bitmelo.Notes.C3;\n\t\t}\n\t\t\n\t\taud.playInfiniteSound(\n\t\t\t0,\n\t\t\tnote,\n\t\t\t0.5,\n\t\t\t2\n\t\t);\n\t}\n\telse if ( !isWalking && player.isWalking ) {\n\t\t// stopped walking\n\t\taud.stopInfiniteSound( 0 );\n\t}\n\t\n\tplayer.isWalking = isWalking;\n\t\n\t// make sure we are not colliding with the fence\n\tif ( \n\t\tnewX >= 16\n\t\t&& newX < scr.width - 16\n\t\t&& newY >= 24\n\t\t&& newY < scr.height - 16\n\t) {\n\t\tplayer.x = newX;\n\t\tplayer.y = newY;\n\t}\n\t\n\t// check mushroom collisions\n\tfor ( let i = 0; i < mushrooms.length; i += 1 ) {\n\t\tconst mushroom = mushrooms[i];\n\t\tif ( !mushroom.wasGrabbed ) {\n\t\t\tconst deltaX = Math.abs( player.x - mushroom.x );\n\t\t\tconst deltaY= Math.abs( player.y - mushroom.y );\n\t\t\tconst distance = Math.sqrt( deltaX * deltaX + deltaY * deltaY );\n\t\t\t\n\t\t\t// player has grabbed a mushroom\n\t\t\tif ( distance <= 12 ) {\n\t\t\t\tmushroom.wasGrabbed = true;\n\t\t\t\tnumberOfGrabbedMushrooms += 1;\n\t\t\t\t\n\t\t\t\taud.playSound(\n\t\t\t\t\t1,\n\t\t\t\t\tbitmelo.Notes.E3,\n\t\t\t\t\t48,\n\t\t\t\t\t0.25,\n\t\t\t\t\t1\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// draw the player\n\tlet frameGID = 1;\n\tif ( player.isWalking ) {\n\t\tif ( player.framesSinceWalkStart % 16 < 8 ) {\n\t\t\tframeGID = 2;\n\t\t}\n\t\telse {\n\t\t\tframeGID = 3;\n\t\t}\n\t}\n\t\n\tscr.drawTile(\n\t\tframeGID,\n\t\tMath.floor( player.x ) - 8, // center the tile on the position\n\t\tMath.floor( player.y ) - 8, // center the tile on the position\n\t\tplayer.flip\n\t);\n}\n\nfunction updateColors() {\n\trandomColor = Math.floor( Math.random() * 16 ) + 1;\n\tsetTimeout( updateColors, 100 );\n}\n\n\n\n\n\n\n\n\n\n\n\n","scrollTop":360,"cursorRow":95,"cursorColumn":11}],"activeIndex":0,"playLogs":[{"type":"error","text":"\"Uncaught SyntaxError: Unexpected token ')'\" on line 67"},{"type":"error","text":"\"Uncaught ReferenceError: player is not defined\" on line 86"},{"type":"error","text":"\"Uncaught ReferenceError: player is not defined\" on line 78"},{"type":"error","text":"\"Uncaught ReferenceError: player is not defined\" on line 78"}]},"clipboard":{"pixels":{"width":16,"height":16,"offsetX":0,"offsetY":0,"data":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,2,1,1,1,1,1,1,1,1,1,1,3,3,2,2,3,3,1,1,1,1,1,1,1,1,1,3,3,3,3,1,1,3,3,1,1,1,1,1,1,14,14,3,3,3,3,3,3,1,1,1,1,1,1,14,14,14,1,1,2,2,3,3,3,1,1,1,1,1,1,14,1,1,1,1,3,2,14,14,14,1,1,1,1,1,1,1,1,1,3,3,3,2,1,1,14,1,1,1,1,1,1,1,3,3,3,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"isActive":true}}}